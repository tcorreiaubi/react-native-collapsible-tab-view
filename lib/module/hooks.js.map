{"version":3,"sources":["hooks.tsx"],"names":["useMemo","Children","useState","useCallback","useContext","useEffect","useWindowDimensions","cancelAnimation","useAnimatedReaction","useAnimatedRef","useAnimatedScrollHandler","useSharedValue","withDelay","withTiming","interpolate","Extrapolate","runOnJS","runOnUI","useDerivedValue","useDeepCompareMemo","Context","TabNameContext","IS_IOS","ONE_FRAME_MS","scrollToImpl","useContainerRef","useAnimatedDynamicRefs","map","setMap","setRef","key","ref","useTabProps","children","tabType","options","tabOptions","Map","forEach","element","index","type","Error","name","props","has","set","optionEntries","Array","from","entries","optionKeys","keys","memoizedOptions","memoizedTabNames","useTabsContext","c","useTabNameContext","useCollapsibleStyle","headerHeight","tabBarHeight","containerHeight","windowWidth","width","style","contentContainerStyle","minHeight","paddingTop","progressViewOffset","useUpdateScrollViewContentSize","tabNames","contentHeights","setContentHeights","height","tabIndex","value","indexOf","scrollContentSizeChange","_","h","useChainCallback","fns","callAll","args","fn","useScroller","contentInset","scroller","x","y","animated","_debugKey","useScrollHandlerY","enabled","accDiffClamp","focusedTab","snapThreshold","revealHeaderOnScroll","refMap","scrollYCurrent","scrollY","isScrolling","isGliding","oldAccScrollY","accScrollY","offset","headerScrollDistance","isSnapping","snappingTo","afterDrag","findIndex","n","scrollTo","onMomentumEnd","undefined","contentHeight","Number","MAX_VALUE","scrollHandler","onScroll","event","contentOffset","clampMax","CLAMP","delta","nextValue","Math","min","max","duration","onBeginDrag","onEndDrag","isFinished","onMomentumBegin","sync","nextPosition","focusedScrollY","tabScrollY","areEqual","currIsOnTop","focusedIsOnTop","hasGap","useSharedAnimatedRef","outerRef","current","useAfterMountEffect","effect","didExecute","setDidExecute","result","timeout","setTimeout","clearTimeout","useConvertAnimatedToValue","animatedValue","setValue","animValue","useHeaderMeasurements","headerTranslateY","top","useFocusedTab","focusedTabValue","useAnimatedTabIndex","indexDecimal"],"mappings":"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","sourcesContent":["import {\n  useMemo,\n  Children,\n  useState,\n  useCallback,\n  useContext,\n  MutableRefObject,\n  useEffect,\n} from 'react'\nimport { useWindowDimensions } from 'react-native'\nimport { ContainerRef, RefComponent } from 'react-native-collapsible-tab-view'\nimport Animated, {\n  cancelAnimation,\n  useAnimatedReaction,\n  useAnimatedRef,\n  useAnimatedScrollHandler,\n  useSharedValue,\n  withDelay,\n  withTiming,\n  interpolate,\n  Extrapolate,\n  runOnJS,\n  runOnUI,\n  useDerivedValue,\n} from 'react-native-reanimated'\nimport { useDeepCompareMemo } from 'use-deep-compare'\n\nimport { Context, TabNameContext } from './Context'\nimport { IS_IOS, ONE_FRAME_MS, scrollToImpl } from './helpers'\nimport {\n  CollapsibleStyle,\n  ContextType,\n  TabName,\n  TabReactElement,\n  TabsWithProps,\n  Ref,\n} from './types'\n\nexport function useContainerRef() {\n  return useAnimatedRef<ContainerRef>()\n}\n\nexport function useAnimatedDynamicRefs(): [\n  ContextType['refMap'],\n  ContextType['setRef']\n] {\n  const [map, setMap] = useState<ContextType['refMap']>({})\n  const setRef = useCallback(function <T extends RefComponent>(\n    key: TabName,\n    ref: React.RefObject<T>\n  ) {\n    setMap((map) => ({ ...map, [key]: ref }))\n    return ref\n  },\n  [])\n\n  return [map, setRef]\n}\n\nexport function useTabProps<T extends TabName>(\n  children: TabReactElement<T>[] | TabReactElement<T>,\n  tabType: Function\n): [TabsWithProps<T>, T[]] {\n  const options = useMemo(() => {\n    const tabOptions: TabsWithProps<T> = new Map()\n    if (children) {\n      Children.forEach(children, (element, index) => {\n        if (!element) return\n\n        if (element.type !== tabType)\n          throw new Error(\n            'Container children must be wrapped in a <Tabs.Tab ... /> component'\n          )\n\n        // make sure children is excluded otherwise our props will mutate too much\n        const { name, children, ...options } = element.props\n        if (tabOptions.has(name))\n          throw new Error(`Tab names must be unique, ${name} already exists`)\n\n        tabOptions.set(name, {\n          index,\n          name,\n          ...options,\n        })\n      })\n    }\n    return tabOptions\n  }, [children, tabType])\n  const optionEntries = Array.from(options.entries())\n  const optionKeys = Array.from(options.keys())\n  const memoizedOptions = useDeepCompareMemo(() => options, [optionEntries])\n  const memoizedTabNames = useDeepCompareMemo(() => optionKeys, [optionKeys])\n  return [memoizedOptions, memoizedTabNames]\n}\n\n/**\n * Hook exposing some useful variables.\n *\n * ```tsx\n * const { focusedTab, ...rest } = useTabsContext()\n * ```\n */\nexport function useTabsContext(): ContextType<TabName> {\n  const c = useContext(Context)\n  if (!c) throw new Error('useTabsContext must be inside a Tabs.Container')\n  return c\n}\n\n/**\n * Access the parent tab screen from any deep component.\n *\n * ```tsx\n * const tabName = useTabNameContext()\n * ```\n */\nexport function useTabNameContext(): TabName {\n  const c = useContext(TabNameContext)\n  if (!c) throw new Error('useTabNameContext must be inside a TabNameContext')\n  return c\n}\n\n/**\n * Hook to access some key styles that make the whole thing work.\n *\n * You can use this to get the progessViewOffset and pass to the refresh control of scroll view.\n */\nexport function useCollapsibleStyle(): CollapsibleStyle {\n  const { headerHeight, tabBarHeight, containerHeight } = useTabsContext()\n  const windowWidth = useWindowDimensions().width\n\n  return {\n    style: { width: windowWidth },\n    contentContainerStyle: {\n      minHeight: IS_IOS\n        ? (containerHeight || 0) - tabBarHeight\n        : (containerHeight || 0) + headerHeight,\n      paddingTop: IS_IOS ? 0 : headerHeight + tabBarHeight,\n    },\n    progressViewOffset: headerHeight + tabBarHeight,\n  }\n}\n\nexport function useUpdateScrollViewContentSize({ name }: { name: TabName }) {\n  const { tabNames, contentHeights } = useTabsContext()\n\n  const setContentHeights = useCallback(\n    (name: TabName, height: number) => {\n      const tabIndex = tabNames.value.indexOf(name)\n      contentHeights.value[tabIndex] = height\n      contentHeights.value = [...contentHeights.value]\n    },\n    [contentHeights, tabNames.value]\n  )\n\n  const scrollContentSizeChange = useCallback(\n    (_: number, h: number) => {\n      runOnUI(setContentHeights)(name, h)\n    },\n    [setContentHeights, name]\n  )\n\n  return scrollContentSizeChange\n}\n\n/**\n * Allows specifying multiple functions to be called in a sequence with the same parameters\n * Useful because we handle some events and need to pass them forward so that the caller can handle them as well\n * @param fns array of functions to call\n * @returns a function that once called will call all passed functions\n */\nexport function useChainCallback(...fns: (Function | undefined)[]) {\n  const callAll = useCallback(\n    (...args: unknown[]) => {\n      fns.forEach((fn) => {\n        if (typeof fn === 'function') {\n          fn(...args)\n        }\n      })\n    },\n    [fns]\n  )\n  return callAll\n}\n\nexport function useScroller<T extends RefComponent>() {\n  const { contentInset } = useTabsContext()\n\n  const scroller = useCallback(\n    (\n      ref: Ref<T> | undefined,\n      x: number,\n      y: number,\n      animated: boolean,\n      _debugKey: string\n    ) => {\n      'worklet'\n      if (!ref) return\n      // console.log(`${_debugKey}, y: ${y}, y adjusted: ${y - contentInset}`)\n      scrollToImpl(ref, x, y - contentInset, animated)\n    },\n    [contentInset]\n  )\n\n  return scroller\n}\n\nexport const useScrollHandlerY = (\n  name: TabName,\n  { enabled }: { enabled: boolean }\n) => {\n  const {\n    accDiffClamp,\n    focusedTab,\n    snapThreshold,\n    revealHeaderOnScroll,\n    refMap,\n    tabNames,\n    index,\n    headerHeight,\n    contentInset,\n    containerHeight,\n    scrollYCurrent,\n    scrollY,\n    isScrolling,\n    isGliding,\n    oldAccScrollY,\n    accScrollY,\n    offset,\n    headerScrollDistance,\n    isSnapping,\n    snappingTo,\n    contentHeights,\n  } = useTabsContext()\n\n  /**\n   * Helper value to track if user is dragging on iOS, because iOS calls\n   * onMomentumEnd only after a vigorous swipe. If the user has finished the\n   * drag, but the onMomentumEnd has never triggered, we need to manually\n   * call it to sync the scenes.\n   */\n  const afterDrag = useSharedValue(0)\n\n  const tabIndex = useMemo(() => tabNames.value.findIndex((n) => n === name), [\n    tabNames,\n    name,\n  ])\n\n  const scrollTo = useScroller()\n\n  const onMomentumEnd = () => {\n    'worklet'\n    if (!enabled) return\n\n    if (typeof snapThreshold === 'number') {\n      if (revealHeaderOnScroll) {\n        if (accDiffClamp.value > 0) {\n          if (\n            scrollYCurrent.value >\n            headerScrollDistance.value * snapThreshold\n          ) {\n            if (\n              accDiffClamp.value <=\n              headerScrollDistance.value * snapThreshold\n            ) {\n              // snap down\n              isSnapping.value = true\n              accDiffClamp.value = withTiming(0, undefined, () => {\n                isSnapping.value = false\n              })\n            } else if (accDiffClamp.value < headerScrollDistance.value) {\n              // snap up\n              isSnapping.value = true\n              accDiffClamp.value = withTiming(\n                headerScrollDistance.value,\n                undefined,\n                () => {\n                  isSnapping.value = false\n                }\n              )\n\n              if (scrollYCurrent.value < headerScrollDistance.value) {\n                scrollTo(\n                  refMap[name],\n                  0,\n                  headerScrollDistance.value,\n                  true,\n                  `[${name}] sticky snap up`\n                )\n              }\n            }\n          } else {\n            isSnapping.value = true\n            accDiffClamp.value = withTiming(0, undefined, () => {\n              isSnapping.value = false\n            })\n          }\n        }\n      } else {\n        if (\n          scrollYCurrent.value <=\n          headerScrollDistance.value * snapThreshold\n        ) {\n          // snap down\n          snappingTo.value = 0\n          scrollTo(refMap[name], 0, 0, true, `[${name}] snap down`)\n        } else if (scrollYCurrent.value <= headerScrollDistance.value) {\n          // snap up\n          snappingTo.value = headerScrollDistance.value\n          scrollTo(\n            refMap[name],\n            0,\n            headerScrollDistance.value,\n            true,\n            `[${name}] snap up`\n          )\n        }\n        isSnapping.value = false\n      }\n    }\n    isGliding.value = false\n  }\n\n  const contentHeight = useDerivedValue(() => {\n    const tabIndex = tabNames.value.indexOf(name)\n    return contentHeights.value[tabIndex] || Number.MAX_VALUE\n  }, [])\n\n  const scrollHandler = useAnimatedScrollHandler(\n    {\n      onScroll: (event) => {\n        if (!enabled) return\n\n        if (focusedTab.value === name) {\n          if (IS_IOS) {\n            let { y } = event.contentOffset\n            // normalize the value so it starts at 0\n            y = y + contentInset\n            const clampMax =\n              contentHeight.value - (containerHeight || 0) + contentInset\n            // make sure the y value is clamped to the scrollable size (clamps overscrolling)\n            scrollYCurrent.value = interpolate(\n              y,\n              [0, clampMax],\n              [0, clampMax],\n              Extrapolate.CLAMP\n            )\n          } else {\n            const { y } = event.contentOffset\n            scrollYCurrent.value = y\n          }\n\n          scrollY.value[index.value] = scrollYCurrent.value\n          oldAccScrollY.value = accScrollY.value\n          accScrollY.value = scrollY.value[index.value] + offset.value\n\n          if (!isSnapping.value && revealHeaderOnScroll) {\n            const delta = accScrollY.value - oldAccScrollY.value\n            const nextValue = accDiffClamp.value + delta\n            if (delta > 0) {\n              // scrolling down\n              accDiffClamp.value = Math.min(\n                headerScrollDistance.value,\n                nextValue\n              )\n            } else if (delta < 0) {\n              // scrolling up\n              accDiffClamp.value = Math.max(0, nextValue)\n            }\n          }\n\n          isScrolling.value = 1\n\n          // cancel the animation that is setting this back to 0 if we're still scrolling\n          cancelAnimation(isScrolling)\n\n          // set it back to 0 after a few frames without active scrolling\n          isScrolling.value = withDelay(\n            ONE_FRAME_MS * 3,\n            withTiming(0, { duration: 0 })\n          )\n        }\n      },\n      onBeginDrag: () => {\n        if (!enabled) return\n\n        // ensure the header stops snapping\n        cancelAnimation(accDiffClamp)\n\n        isSnapping.value = false\n        isScrolling.value = 0\n        isGliding.value = false\n\n        if (IS_IOS) cancelAnimation(afterDrag)\n      },\n      onEndDrag: () => {\n        if (!enabled) return\n\n        isGliding.value = true\n\n        if (IS_IOS) {\n          // we delay this by one frame so that onMomentumBegin may fire on iOS\n          afterDrag.value = withDelay(\n            ONE_FRAME_MS,\n            withTiming(0, { duration: 0 }, (isFinished) => {\n              // if the animation is finished, the onMomentumBegin has\n              // never started, so we need to manually trigger the onMomentumEnd\n              // to make sure we snap\n              if (isFinished) {\n                isGliding.value = false\n                onMomentumEnd()\n              }\n            })\n          )\n        }\n      },\n      onMomentumBegin: () => {\n        if (!enabled) return\n\n        if (IS_IOS) {\n          cancelAnimation(afterDrag)\n        }\n      },\n      onMomentumEnd,\n    },\n    [\n      refMap,\n      name,\n      revealHeaderOnScroll,\n      containerHeight,\n      contentInset,\n      snapThreshold,\n      enabled,\n      scrollTo,\n    ]\n  )\n\n  // sync unfocused scenes\n  useAnimatedReaction(\n    () => {\n      return (\n        !isSnapping.value && !isScrolling.value && !isGliding.value && enabled\n      )\n    },\n    (sync) => {\n      if (sync && focusedTab.value !== name) {\n        let nextPosition = null\n        const focusedScrollY = scrollY.value[index.value]\n        const tabScrollY = scrollY.value[tabIndex]\n        const areEqual = focusedScrollY === tabScrollY\n\n        if (!areEqual) {\n          const currIsOnTop = tabScrollY <= headerScrollDistance.value + 1\n          const focusedIsOnTop =\n            focusedScrollY <= headerScrollDistance.value + 1\n\n          if (revealHeaderOnScroll) {\n            const hasGap = accDiffClamp.value > tabScrollY\n            if (hasGap || currIsOnTop) {\n              nextPosition = accDiffClamp.value\n            }\n          } else if (typeof snapThreshold === 'number') {\n            if (focusedIsOnTop) {\n              nextPosition = snappingTo.value\n            } else if (currIsOnTop) {\n              nextPosition = headerHeight\n            }\n          } else if (currIsOnTop || focusedIsOnTop) {\n            nextPosition = Math.min(focusedScrollY, headerScrollDistance.value)\n          }\n        }\n\n        if (nextPosition !== null) {\n          scrollY.value[tabIndex] = nextPosition\n          scrollTo(refMap[name], 0, nextPosition, false, `[${name}] sync pane`)\n        }\n      }\n    },\n    [revealHeaderOnScroll, refMap, snapThreshold, tabIndex, enabled, scrollTo]\n  )\n\n  return scrollHandler\n}\n\ntype ForwardRefType<T> =\n  | ((instance: T | null) => void)\n  | MutableRefObject<T | null>\n  | null\n\n/**\n * Magic hook that creates a multicast ref. Useful so that we can both capture the ref, and forward it to callers.\n * Accepts a parameter for an outer ref that will also be updated to the same ref\n * @param outerRef the outer ref that needs to be updated\n * @returns an animated ref\n */\nexport function useSharedAnimatedRef<T extends RefComponent>(\n  outerRef: ForwardRefType<T>\n) {\n  const ref = useAnimatedRef<T>()\n\n  // this executes on every render\n  useEffect(() => {\n    if (!outerRef) {\n      return\n    }\n    if (typeof outerRef === 'function') {\n      outerRef(ref.current)\n    } else {\n      outerRef.current = ref.current\n    }\n  })\n\n  return ref\n}\n\nexport function useAfterMountEffect(effect: React.EffectCallback) {\n  const [didExecute, setDidExecute] = useState(false)\n  const result = useEffect(() => {\n    if (didExecute) return\n\n    const timeout = setTimeout(() => {\n      effect()\n      setDidExecute(true)\n    }, 0)\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [didExecute, effect])\n  return result\n}\n\nexport function useConvertAnimatedToValue<T>(\n  animatedValue: Animated.SharedValue<T>\n) {\n  const [value, setValue] = useState(animatedValue.value)\n\n  useAnimatedReaction(\n    () => {\n      return animatedValue.value\n    },\n    (animValue) => {\n      if (animValue !== value) {\n        runOnJS(setValue)(animValue)\n      }\n    },\n    [value]\n  )\n\n  return value\n}\n\ninterface HeaderMeasurements {\n  /**\n   * Animated value that represents the current Y translation of the header\n   */\n  top: Animated.SharedValue<number>\n  /**\n   * The height of the header\n   */\n  height: number\n}\n\nexport function useHeaderMeasurements(): HeaderMeasurements {\n  const { headerTranslateY, headerHeight } = useTabsContext()\n  return {\n    top: headerTranslateY,\n    height: headerHeight,\n  }\n}\n\n/**\n * Returns the currently focused tab name\n */\nexport function useFocusedTab() {\n  const { focusedTab } = useTabsContext()\n  const focusedTabValue = useConvertAnimatedToValue(focusedTab)\n  return focusedTabValue\n}\n\n/**\n * Returns an animated value representing the current tab index, as a floating point number\n */\nexport function useAnimatedTabIndex() {\n  const { indexDecimal } = useTabsContext()\n  return indexDecimal\n}\n"]}