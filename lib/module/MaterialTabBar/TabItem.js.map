{"version":3,"sources":["TabItem.tsx"],"names":["React","StyleSheet","Pressable","Platform","Animated","interpolate","useAnimatedStyle","TABBAR_HEIGHT","DEFAULT_COLOR","MaterialTabItem","name","index","onPress","onLayout","scrollEnabled","indexDecimal","label","style","labelStyle","activeColor","inactiveColor","inactiveOpacity","pressColor","pressOpacity","OS","rest","stylez","opacity","value","Extrapolate","CLAMP","color","Math","abs","pressed","styles","grow","item","borderless","create","flex","alignItems","justifyContent","paddingHorizontal","height","margin"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,cAAhD;AACA,OAAOC,QAAP,IACEC,WADF,EAEEC,gBAFF,QAGO,yBAHP;AAQA,OAAO,MAAMC,aAAa,GAAG,EAAtB;AACP,MAAMC,aAAa,GAAG,kBAAtB;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAG,CAA0B;AACvDC,EAAAA,IADuD;AAEvDC,EAAAA,KAFuD;AAGvDC,EAAAA,OAHuD;AAIvDC,EAAAA,QAJuD;AAKvDC,EAAAA,aALuD;AAMvDC,EAAAA,YANuD;AAOvDC,EAAAA,KAPuD;AAQvDC,EAAAA,KARuD;AASvDC,EAAAA,UATuD;AAUvDC,EAAAA,WAAW,GAAGX,aAVyC;AAWvDY,EAAAA,aAAa,GAAGZ,aAXuC;AAYvDa,EAAAA,eAAe,GAAG,GAZqC;AAavDC,EAAAA,UAAU,GAAG,SAb0C;AAcvDC,EAAAA,YAAY,GAAGpB,QAAQ,CAACqB,EAAT,KAAgB,KAAhB,GAAwB,GAAxB,GAA8B,CAdU;AAevD,KAAGC;AAfoD,CAA1B,KAgBoB;AACjD,QAAMC,MAAM,GAAGpB,gBAAgB,CAAC,MAAM;AACpC,WAAO;AACLqB,MAAAA,OAAO,EAAEtB,WAAW,CAClBU,YAAY,CAACa,KADK,EAElB,CAACjB,KAAK,GAAG,CAAT,EAAYA,KAAZ,EAAmBA,KAAK,GAAG,CAA3B,CAFkB,EAGlB,CAACU,eAAD,EAAkB,CAAlB,EAAqBA,eAArB,CAHkB,EAIlBjB,QAAQ,CAACyB,WAAT,CAAqBC,KAJH,CADf;AAOLC,MAAAA,KAAK,EACHC,IAAI,CAACC,GAAL,CAAStB,KAAK,GAAGI,YAAY,CAACa,KAA9B,IAAuC,GAAvC,GACIT,WADJ,GAEIC;AAVD,KAAP;AAYD,GAb8B,CAA/B;AAeA,sBACE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAEP,QADZ;AAEE,IAAA,KAAK,EAAE,CAAC;AAAEqB,MAAAA;AAAF,KAAD,KAAiB,CACtB;AAAEP,MAAAA,OAAO,EAAEO,OAAO,GAAGX,YAAH,GAAkB;AAApC,KADsB,EAEtB,CAACT,aAAD,IAAkBqB,MAAM,CAACC,IAFH,EAGtBD,MAAM,CAACE,IAHe,EAItBpB,KAJsB,CAF1B;AAQE,IAAA,OAAO,EAAE,MAAML,OAAO,CAACF,IAAD,CARxB;AASE,IAAA,cAAc,EAAE;AACd4B,MAAAA,UAAU,EAAE,IADE;AAEdP,MAAAA,KAAK,EAAET;AAFO;AATlB,KAaMG,IAbN,gBAeE,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAACU,MAAM,CAACnB,KAAR,EAAeU,MAAf,EAAuBR,UAAvB;AAAtB,KACGF,KADH,CAfF,CADF;AAqBD,CArDM;AAuDP,MAAMmB,MAAM,GAAGlC,UAAU,CAACsC,MAAX,CAAkB;AAC/BH,EAAAA,IAAI,EAAE;AACJI,IAAAA,IAAI,EAAE;AADF,GADyB;AAI/BH,EAAAA,IAAI,EAAE;AACJI,IAAAA,UAAU,EAAE,QADR;AAEJC,IAAAA,cAAc,EAAE,QAFZ;AAGJC,IAAAA,iBAAiB,EAAE,EAHf;AAIJC,IAAAA,MAAM,EAAErC;AAJJ,GAJyB;AAU/BS,EAAAA,KAAK,EAAE;AACL6B,IAAAA,MAAM,EAAE;AADH;AAVwB,CAAlB,CAAf","sourcesContent":["import React from 'react'\nimport { StyleSheet, Pressable, Platform } from 'react-native'\nimport Animated, {\n  interpolate,\n  useAnimatedStyle,\n} from 'react-native-reanimated'\n\nimport { TabName } from '../types'\nimport { MaterialTabItemProps } from './types'\n\nexport const TABBAR_HEIGHT = 48\nconst DEFAULT_COLOR = 'rgba(0, 0, 0, 1)'\n\n/**\n * Any additional props are passed to the pressable component.\n */\nexport const MaterialTabItem = <T extends TabName = any>({\n  name,\n  index,\n  onPress,\n  onLayout,\n  scrollEnabled,\n  indexDecimal,\n  label,\n  style,\n  labelStyle,\n  activeColor = DEFAULT_COLOR,\n  inactiveColor = DEFAULT_COLOR,\n  inactiveOpacity = 0.7,\n  pressColor = '#DDDDDD',\n  pressOpacity = Platform.OS === 'ios' ? 0.2 : 1,\n  ...rest\n}: MaterialTabItemProps<T>): React.ReactElement => {\n  const stylez = useAnimatedStyle(() => {\n    return {\n      opacity: interpolate(\n        indexDecimal.value,\n        [index - 1, index, index + 1],\n        [inactiveOpacity, 1, inactiveOpacity],\n        Animated.Extrapolate.CLAMP\n      ),\n      color:\n        Math.abs(index - indexDecimal.value) < 0.5\n          ? activeColor\n          : inactiveColor,\n    }\n  })\n\n  return (\n    <Pressable\n      onLayout={onLayout}\n      style={({ pressed }) => [\n        { opacity: pressed ? pressOpacity : 1 },\n        !scrollEnabled && styles.grow,\n        styles.item,\n        style,\n      ]}\n      onPress={() => onPress(name)}\n      android_ripple={{\n        borderless: true,\n        color: pressColor,\n      }}\n      {...rest}\n    >\n      <Animated.Text style={[styles.label, stylez, labelStyle]}>\n        {label}\n      </Animated.Text>\n    </Pressable>\n  )\n}\n\nconst styles = StyleSheet.create({\n  grow: {\n    flex: 1,\n  },\n  item: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 10,\n    height: TABBAR_HEIGHT,\n  },\n  label: {\n    margin: 4,\n  },\n})\n"]}