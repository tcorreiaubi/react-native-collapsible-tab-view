{"version":3,"sources":["Lazy.tsx"],"names":["React","StyleSheet","Animated","useSharedValue","useAnimatedReaction","runOnJS","useDerivedValue","withTiming","useAnimatedStyle","ScrollView","useScroller","useTabNameContext","useTabsContext","Lazy","children","startMounted","cancelLazyFadeIn","name","focusedTab","refMap","scrollY","tabNames","canMount","setCanMount","useState","afterMount","setAfterMount","isSelfMounted","useRef","opacity","useEffect","current","allowToMount","useCallback","setTimeout","value","focused","scrollTo","ref","tabIndex","findIndex","n","stylez","styles","container","create","flex"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StyleSheet } from 'react-native'\nimport Animated, {\n  useSharedValue,\n  useAnimatedReaction,\n  runOnJS,\n  useDerivedValue,\n  withTiming,\n  useAnimatedStyle,\n} from 'react-native-reanimated'\n\nimport { ScrollView } from './ScrollView'\nimport { useScroller, useTabNameContext, useTabsContext } from './hooks'\n\n/**\n * Typically used internally, but if you want to mix lazy and regular screens you can wrap the lazy ones with this component.\n */\nexport const Lazy: React.FC<{\n  startMounted?: boolean\n  cancelLazyFadeIn?: boolean\n  children: React.ReactElement\n}> = ({ children, startMounted, cancelLazyFadeIn }) => {\n  const name = useTabNameContext()\n  const { focusedTab, refMap, scrollY, tabNames } = useTabsContext()\n  const [canMount, setCanMount] = React.useState(!!startMounted)\n  const [afterMount, setAfterMount] = React.useState(!!startMounted)\n  const isSelfMounted = React.useRef(true)\n\n  const opacity = useSharedValue(\n    cancelLazyFadeIn || startMounted ? 1 : 0,\n    false\n  )\n\n  React.useEffect(() => {\n    return () => {\n      isSelfMounted.current = false\n    }\n  }, [])\n\n  const allowToMount = React.useCallback(() => {\n    // wait the scene to be at least 50 ms focused, before mounting\n    setTimeout(() => {\n      if (focusedTab.value === name) {\n        if (isSelfMounted.current) setCanMount(true)\n        // we need to wait for the children rendering to complete so that we can scroll properly\n        setTimeout(() => {\n          if (isSelfMounted.current) setAfterMount(true)\n        }, 10)\n      }\n    }, 50)\n  }, [focusedTab.value, name])\n\n  useAnimatedReaction(\n    () => {\n      return focusedTab.value === name\n    },\n    (focused) => {\n      if (focused && !canMount) {\n        runOnJS(allowToMount)()\n      }\n    },\n    [canMount, focusedTab]\n  )\n\n  const scrollTo = useScroller()\n\n  const ref = name ? refMap[name] : null\n\n  useDerivedValue(() => {\n    if (afterMount) {\n      const tabIndex = tabNames.value.findIndex((n) => n === name)\n      if (ref && tabIndex >= 0) {\n        scrollTo(ref, 0, scrollY.value[tabIndex], false, `[${name}] lazy sync`)\n      }\n      if (!cancelLazyFadeIn && opacity.value !== 1)\n        opacity.value = withTiming(1)\n    }\n  }, [ref, cancelLazyFadeIn, opacity, name, afterMount, tabNames, scrollTo])\n\n  const stylez = useAnimatedStyle(() => {\n    return {\n      opacity: opacity.value,\n    }\n  }, [])\n\n  return canMount ? (\n    cancelLazyFadeIn ? (\n      children\n    ) : (\n      <Animated.View\n        pointerEvents=\"box-none\"\n        style={[styles.container, !cancelLazyFadeIn && stylez]}\n      >\n        {children}\n      </Animated.View>\n    )\n  ) : (\n    <ScrollView />\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n})\n"]}